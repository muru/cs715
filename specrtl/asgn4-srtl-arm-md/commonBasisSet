This file lists the patterns in the common basis set. The common basis set 
consists of a set of abstract patterns which are common across architectures 
and are part of a majority of concrete patterns.
We urge you to use the common basis set in the specmd files.

These patterns are embedded in the srtl compiler itself.
You can directly instantiate concrete patterns using these abstract patterns.
There is no need to write these abstract patters in the specMd file.
Convention:
If "n" is the number after the operand, then the operand is the "nth" child of the node.
e.g. For set_const2, const is the operand at the second child of the "set" node.

We will mail you the actual specMd patterns from these abstract 
patterns for reference as soon as possible. You do not have to write these 
patterns in the specMd file. They are already embedded in the compiler.

set_const
set_const2
set_const_int2
set_const_double2
set_const_fixed2
set_const_string2
set_const_vector2
set_symbol_ref2
set_label_ref2
set_high2
set_plus2
set_ss_plus2
set_us_plus2
set_minus2
set_ss_minus2
set_us_minus2
set_plusminus2
set_mult2
set_ssmult2
set_usmult2
set_ssdiv2
set_usdiv2
set_div2 
set_udiv2
set_mod2
set_umod2
set_smax2
set_smin2
set_smaxmin2
set_umax2
set_umin2
set_unsigned_float2 
set_float2 
set_neg2 
set_ssneg2 
set_usneg2 
set_absneg2 
set_abs2 
set_sign_extend1 
set_sign_extend2 
set_sign_extract2 
set_zero_extract1 
set_zero_extract2 
set_fe2 
set_sqrt2 
set_bswap2 
set_ashift2 
set_lshiftrt2
set_ashiftrt2 
set_any_shiftrt2 
set_not2 
set_ior2 
set_and2 
set_or2 
set_ao2 
set_xor2 
set_compare2 
set_compare
set_if_then_else2
set_if_then_else
set_ite2 
set_match_operator2
set_match_operator
set_match_op_dup2 
set_match_op_dup 
set_eq2 
set_ne2 
set_lt2 
set_ltu2 
set_gt2 
set_gtu2 
set_ge2 
set_geu2 
set_le2 
set_leu2 
set_mem1 
set_mem 
set_mem2 
set_srict_low_part1 
set_unspec2 
set_unspec 
set_rotate2 
set_call2 
set_parity2 
set_truncate2 
set_sset_truncate2 
set_unset_truncate2 
set_float_truncate2 
set_fix2 
set_unsigned_fix2 
set_vec_merge2 
set_vec_select2 
set_vec_concat2 
set_vec_duplicate2 
set_fma2
set_unspec_volatile2 
set_zero_extract 
set_subreg2 
set_float_truncate2 
set_zero_extract2 
set_zero_extend2 
set_vect_merge2 
set_strict_low_part1 
set_mem1 
  set_unspec2_compare 
  set_unspec_compare 
set_compare2_minus1 
set_compare_minus 
set_compare2_plus1 
set_compare2_neg1 
set_compare2_and1 
set_compare2_any_or1 
set_ite2_ne1 
set_zero_extend2_not1 
set_zero_extend2_ashift1 
set_zero_extend2_any_shiftrt1 
set_zero_extend2_any_rotate1 
set_and2_zero_extract 
set_and2_not1 
set_and2_neg1 
set_and2_plus1 
set_and2_plus1_not2 
set_ior2_plus1 
set_ior2_plus1_not2 
set_ior2_plus1 
set_vect_merge2_plus1_minus2 
set_plus2_plus1 
set_plus2_mult1 
set_match_operator2_eq1 
set_absneg2_float_extend1 
set_ao2_zero_extend1 
set_srict_low_part1_and1 
set_zero_extract2_subreg1 
set_zero_extract2_plus1 
set_zero_extract2_minus1 
set_mult2_any_extend2 
set_zero_extract2_plusminus1 
set_unspec_compare_match_operator 
set_zero_extend2_sign_extend 
set_vec_concat2_float_truncate1 
set_compare2_plus 
set_compare2_neg 
set_compare_not 
set_compare2_minus 
set_compare2_and 
set_compare2_ashift1 
set_zero_extend2_minus1 
set_zero_extend2_minus 
set_zero_extend_not 
set_match_op_dup2_and1 
set_match_operator2_and1 
set_strict_low_part_and2 
set_zero_extract1_and2 
set_if_then_else2_ne1 
